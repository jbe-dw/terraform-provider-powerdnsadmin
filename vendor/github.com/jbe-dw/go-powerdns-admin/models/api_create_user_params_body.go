// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APICreateUserParamsBody api create user params body
//
// swagger:model apiCreateUserParamsBody
type APICreateUserParamsBody struct {

	// Confirmed status
	Confirmed string `json:"confirmed,omitempty"`

	// Email address if user (must be unique)
	// Required: true
	Email *string `json:"email"`

	// Firstname of user
	Firstname string `json:"firstname,omitempty"`

	// Lastname of user
	Lastname string `json:"lastname,omitempty"`

	// OTP secret
	OtpSecret string `json:"otp_secret,omitempty"`

	// Hashed password for authentication
	Password string `json:"password,omitempty"`

	// Plain text password (will be hashed) for authentication
	PlainTextPassword string `json:"plain_text_password,omitempty"`

	// Role ID of role to be assigned to user
	RoleID int64 `json:"role_id,omitempty"`

	// Name of role to be assigned to user (default 'User')
	RoleName string `json:"role_name,omitempty"`

	// Login name for user (unique, immutable)
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this api create user params body
func (m *APICreateUserParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APICreateUserParamsBody) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

func (m *APICreateUserParamsBody) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *APICreateUserParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APICreateUserParamsBody) UnmarshalBinary(b []byte) error {
	var res APICreateUserParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
