// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewAPIRemoveAccountUserParams creates a new APIRemoveAccountUserParams object
// with the default values initialized.
func NewAPIRemoveAccountUserParams() *APIRemoveAccountUserParams {
	var ()
	return &APIRemoveAccountUserParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAPIRemoveAccountUserParamsWithTimeout creates a new APIRemoveAccountUserParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAPIRemoveAccountUserParamsWithTimeout(timeout time.Duration) *APIRemoveAccountUserParams {
	var ()
	return &APIRemoveAccountUserParams{

		timeout: timeout,
	}
}

// NewAPIRemoveAccountUserParamsWithContext creates a new APIRemoveAccountUserParams object
// with the default values initialized, and the ability to set a context for a request
func NewAPIRemoveAccountUserParamsWithContext(ctx context.Context) *APIRemoveAccountUserParams {
	var ()
	return &APIRemoveAccountUserParams{

		Context: ctx,
	}
}

// NewAPIRemoveAccountUserParamsWithHTTPClient creates a new APIRemoveAccountUserParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAPIRemoveAccountUserParamsWithHTTPClient(client *http.Client) *APIRemoveAccountUserParams {
	var ()
	return &APIRemoveAccountUserParams{
		HTTPClient: client,
	}
}

/*APIRemoveAccountUserParams contains all the parameters to send to the API endpoint
for the api remove account user operation typically these are written to a http.Request
*/
type APIRemoveAccountUserParams struct {

	/*AccountID
	  The id of the account to link/unlink users to account

	*/
	AccountID int64
	/*UserID
	  The id of the user to (un)link to/from account

	*/
	UserID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the api remove account user params
func (o *APIRemoveAccountUserParams) WithTimeout(timeout time.Duration) *APIRemoveAccountUserParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the api remove account user params
func (o *APIRemoveAccountUserParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the api remove account user params
func (o *APIRemoveAccountUserParams) WithContext(ctx context.Context) *APIRemoveAccountUserParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the api remove account user params
func (o *APIRemoveAccountUserParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the api remove account user params
func (o *APIRemoveAccountUserParams) WithHTTPClient(client *http.Client) *APIRemoveAccountUserParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the api remove account user params
func (o *APIRemoveAccountUserParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the api remove account user params
func (o *APIRemoveAccountUserParams) WithAccountID(accountID int64) *APIRemoveAccountUserParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the api remove account user params
func (o *APIRemoveAccountUserParams) SetAccountID(accountID int64) {
	o.AccountID = accountID
}

// WithUserID adds the userID to the api remove account user params
func (o *APIRemoveAccountUserParams) WithUserID(userID int64) *APIRemoveAccountUserParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the api remove account user params
func (o *APIRemoveAccountUserParams) SetUserID(userID int64) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *APIRemoveAccountUserParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param account_id
	if err := r.SetPathParam("account_id", swag.FormatInt64(o.AccountID)); err != nil {
		return err
	}

	// path param user_id
	if err := r.SetPathParam("user_id", swag.FormatInt64(o.UserID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
