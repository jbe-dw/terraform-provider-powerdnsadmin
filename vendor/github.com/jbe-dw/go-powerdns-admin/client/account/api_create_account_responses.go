// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jbe-dw/go-powerdns-admin/models"
)

// APICreateAccountReader is a Reader for the APICreateAccount structure.
type APICreateAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *APICreateAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAPICreateAccountCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAPICreateAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAPICreateAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAPICreateAccountCreated creates a APICreateAccountCreated with default headers values
func NewAPICreateAccountCreated() *APICreateAccountCreated {
	return &APICreateAccountCreated{}
}

/*APICreateAccountCreated handles this case with default header values.

Created
*/
type APICreateAccountCreated struct {
	Payload *models.Account
}

func (o *APICreateAccountCreated) Error() string {
	return fmt.Sprintf("[POST /pdnsadmin/accounts][%d] apiCreateAccountCreated  %+v", 201, o.Payload)
}

func (o *APICreateAccountCreated) GetPayload() *models.Account {
	return o.Payload
}

func (o *APICreateAccountCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateAccountBadRequest creates a APICreateAccountBadRequest with default headers values
func NewAPICreateAccountBadRequest() *APICreateAccountBadRequest {
	return &APICreateAccountBadRequest{}
}

/*APICreateAccountBadRequest handles this case with default header values.

Unprocessable Entry, the Account data provided has issues.
*/
type APICreateAccountBadRequest struct {
	Payload *models.Error
}

func (o *APICreateAccountBadRequest) Error() string {
	return fmt.Sprintf("[POST /pdnsadmin/accounts][%d] apiCreateAccountBadRequest  %+v", 400, o.Payload)
}

func (o *APICreateAccountBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *APICreateAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAPICreateAccountInternalServerError creates a APICreateAccountInternalServerError with default headers values
func NewAPICreateAccountInternalServerError() *APICreateAccountInternalServerError {
	return &APICreateAccountInternalServerError{}
}

/*APICreateAccountInternalServerError handles this case with default header values.

Internal Server Error. There was a problem creating the account
*/
type APICreateAccountInternalServerError struct {
	Payload *models.Error
}

func (o *APICreateAccountInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pdnsadmin/accounts][%d] apiCreateAccountInternalServerError  %+v", 500, o.Payload)
}

func (o *APICreateAccountInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *APICreateAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
