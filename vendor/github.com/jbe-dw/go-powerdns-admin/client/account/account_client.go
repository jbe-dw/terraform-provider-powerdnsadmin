// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new account API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for account API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	APIAddAccountUser(params *APIAddAccountUserParams, authInfo runtime.ClientAuthInfoWriter) (*APIAddAccountUserNoContent, error)

	APICreateAccount(params *APICreateAccountParams, authInfo runtime.ClientAuthInfoWriter) (*APICreateAccountCreated, error)

	APIListAccountUsers(params *APIListAccountUsersParams, authInfo runtime.ClientAuthInfoWriter) (*APIListAccountUsersOK, error)

	APIListAccounts(params *APIListAccountsParams, authInfo runtime.ClientAuthInfoWriter) (*APIListAccountsOK, error)

	APIRemoveAccountUser(params *APIRemoveAccountUserParams, authInfo runtime.ClientAuthInfoWriter) (*APIRemoveAccountUserNoContent, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  APIAddAccountUser links user to account
*/
func (a *Client) APIAddAccountUser(params *APIAddAccountUserParams, authInfo runtime.ClientAuthInfoWriter) (*APIAddAccountUserNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAPIAddAccountUserParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "api_add_account_user",
		Method:             "PUT",
		PathPattern:        "/pdnsadmin/accounts/users/{account_id}/{user_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &APIAddAccountUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*APIAddAccountUserNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for api_add_account_user: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  APICreateAccount adds an account

  This methods adds a new Account
*/
func (a *Client) APICreateAccount(params *APICreateAccountParams, authInfo runtime.ClientAuthInfoWriter) (*APICreateAccountCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAPICreateAccountParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "api_create_account",
		Method:             "POST",
		PathPattern:        "/pdnsadmin/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &APICreateAccountReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*APICreateAccountCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for api_create_account: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  APIListAccountUsers lists users linked to a specific account
*/
func (a *Client) APIListAccountUsers(params *APIListAccountUsersParams, authInfo runtime.ClientAuthInfoWriter) (*APIListAccountUsersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAPIListAccountUsersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "api_list_account_users",
		Method:             "GET",
		PathPattern:        "/pdnsadmin/accounts/users/{account_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &APIListAccountUsersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*APIListAccountUsersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for api_list_account_users: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  APIListAccounts gets all account entries
*/
func (a *Client) APIListAccounts(params *APIListAccountsParams, authInfo runtime.ClientAuthInfoWriter) (*APIListAccountsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAPIListAccountsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "api_list_accounts",
		Method:             "GET",
		PathPattern:        "/pdnsadmin/accounts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &APIListAccountsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*APIListAccountsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for api_list_accounts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  APIRemoveAccountUser unlinks user from account
*/
func (a *Client) APIRemoveAccountUser(params *APIRemoveAccountUserParams, authInfo runtime.ClientAuthInfoWriter) (*APIRemoveAccountUserNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAPIRemoveAccountUserParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "api_remove_account_user",
		Method:             "DELETE",
		PathPattern:        "/pdnsadmin/accounts/users/{account_id}/{user_id}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &APIRemoveAccountUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*APIRemoveAccountUserNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for api_remove_account_user: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
