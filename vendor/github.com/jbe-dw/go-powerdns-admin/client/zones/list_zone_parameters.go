// Code generated by go-swagger; DO NOT EDIT.

package zones

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListZoneParams creates a new ListZoneParams object
// with the default values initialized.
func NewListZoneParams() *ListZoneParams {
	var ()
	return &ListZoneParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListZoneParamsWithTimeout creates a new ListZoneParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListZoneParamsWithTimeout(timeout time.Duration) *ListZoneParams {
	var ()
	return &ListZoneParams{

		timeout: timeout,
	}
}

// NewListZoneParamsWithContext creates a new ListZoneParams object
// with the default values initialized, and the ability to set a context for a request
func NewListZoneParamsWithContext(ctx context.Context) *ListZoneParams {
	var ()
	return &ListZoneParams{

		Context: ctx,
	}
}

// NewListZoneParamsWithHTTPClient creates a new ListZoneParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListZoneParamsWithHTTPClient(client *http.Client) *ListZoneParams {
	var ()
	return &ListZoneParams{
		HTTPClient: client,
	}
}

/*ListZoneParams contains all the parameters to send to the API endpoint
for the list zone operation typically these are written to a http.Request
*/
type ListZoneParams struct {

	/*ServerID
	  The id of the server to retrieve

	*/
	ServerID string
	/*ZoneID
	  The id of the zone to retrieve

	*/
	ZoneID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list zone params
func (o *ListZoneParams) WithTimeout(timeout time.Duration) *ListZoneParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list zone params
func (o *ListZoneParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list zone params
func (o *ListZoneParams) WithContext(ctx context.Context) *ListZoneParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list zone params
func (o *ListZoneParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list zone params
func (o *ListZoneParams) WithHTTPClient(client *http.Client) *ListZoneParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list zone params
func (o *ListZoneParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServerID adds the serverID to the list zone params
func (o *ListZoneParams) WithServerID(serverID string) *ListZoneParams {
	o.SetServerID(serverID)
	return o
}

// SetServerID adds the serverId to the list zone params
func (o *ListZoneParams) SetServerID(serverID string) {
	o.ServerID = serverID
}

// WithZoneID adds the zoneID to the list zone params
func (o *ListZoneParams) WithZoneID(zoneID string) *ListZoneParams {
	o.SetZoneID(zoneID)
	return o
}

// SetZoneID adds the zoneId to the list zone params
func (o *ListZoneParams) SetZoneID(zoneID string) {
	o.ZoneID = zoneID
}

// WriteToRequest writes these params to a swagger request
func (o *ListZoneParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param server_id
	if err := r.SetPathParam("server_id", o.ServerID); err != nil {
		return err
	}

	// path param zone_id
	if err := r.SetPathParam("zone_id", o.ZoneID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
